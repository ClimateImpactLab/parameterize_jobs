
language: python

env:
  - TEST_ENV=tox
    INSTALL_NUMPY=false
  - TEST_ENV=conda
    INSTALL_NUMPY=false
  - TEST_ENV=conda
    INSTALL_NUMPY=true

matrix:
  include:
    - python: 2.7
      dist: trusty
      sudo: no
    - python: 3.6
      dist: trusty
      sudo: no
    - python: 3.7
      dist: xenial
      sudo: yes

install:
- pip install --upgrade pip
- if [[ "$TEST_ENV" == "conda" ]]; then
    if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
    && bash miniconda.sh -b -p $HOME/miniconda
    && export PATH="$HOME/miniconda/bin:$PATH"
    && hash -r
    && conda config --set always_yes yes --set changeps1 no
    && conda update -q conda
    && conda info -a
    && conda create -n test_env python=$TRAVIS_PYTHON_VERSION --yes
    && source activate test_env
    && python setup.py install
    && python -m pip install -r requirements_dev.txt
    && conda install --yes --file requirements_conda.txt
    && if [[ "$INSTALL_NUMPY" == "true" ]]; then
        conda install --yes numpy;
      fi
  else
    pip install -U tox-travis;
  fi

script:
- if [[ "$TEST_ENV" == "conda" ]]; then
    if [[ "$TRAVIS_PYTHON_VERSION" != "2.7" ]]; then
        pytest && sphinx-apidoc -o docs parameterize_jobs
  && sphinx-build -W -b html -d docs/_build/doctrees docs/. docs/_build/html;
    fi;
  else
    tox;
  fi;

after_success:
- coveralls

deploy:
  provider: pypi
  distributions: sdist bdist_wheel
  user: delgadom
  repo: delgadom/parameterize_jobs
  password:
    secure: "0Q5efdYsdgv+mtX27raeUvUIlY4KzSXa4xhe5cj9LYHdBSF0SX/8pRvWCCpk81tZdJVLSDBajYjpqJgkcUvYHFc71eb9yw0GqWbZCFQ79pHSCbjo54vLNSYaIKyjwQpxESQSrnrxN6TAIuabC0EYmPB0nBCw1OYjewDEx3WvBCmzcb9X42NhGAqQzvIiE0uEyKBjglASJgfMD+gybaj0mvxgoC79vTV8pxRO+USabLWFEOmPMnIC06VPuNf9bK8S13dAq0C9dnKEwwGru3mNcnU3cHU86mc8w3Qfq0xcxpFoZmUjPYFAYmFAn8K7lxbPJ39j9x0uIiCOmw8sGirXi0xV5Pbth4Q8ffigyIBO8ZHONFMGNo6xn4pCFZXMFC3IZUyxV5pTDugblUds+gC85MGKNjylpnht4JFMCn2JajoEzvZQ1Kp9diyig+2XjMQNt7gXcoJSBGej0VK8palJL6iJkLdX8Yia1TxXtuGL4RS4Q36+K6ce4XcxTXtUwKhWP6QwFtbyE+u81m393D0I0ocvOz+RI+PK3LyQZ1JEIi+XJlZT/+dInSLZRbeXyFKZVOm1ZRjq3cHuN6Lqc/OWU/KvbOkGQHG5tK5mHKyCn5DBJO3vQpKuqh9fLKLwZbPTqViwLY5ghDv8Pjo8mk+dnFOEH6VMq/09jhyvpCT5Jec="
  on:
    tags: true
    python: 3.6
